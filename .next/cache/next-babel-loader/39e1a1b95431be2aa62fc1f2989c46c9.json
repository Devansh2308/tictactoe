{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devansh Kumar Sharma\\\\Desktop\\\\megatropuz\\\\cal\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Square from \"./../components/square\";\nimport square from \"./../components/square\";\nimport Alert from \"@material-ui/lab/Alert\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  },\n  row: {\n    display: \"inline\",\n    float: \"left\"\n  }\n}));\n\nfunction Game() {\n  const classes = useStyles();\n  const {\n    0: squares,\n    1: setsquares\n  } = useState(Array(9).fill(null));\n  const {\n    0: isXNext,\n    1: setXNext\n  } = useState(true);\n\n  function renderSquare(i) {\n    return __jsx(Square, {\n      onClick: () => {\n        if (squares[i] != null) {\n          return;\n        }\n\n        const nextSquares = squares.slice();\n        nextSquares[i] = isXNext ? \"X\" : \"O\";\n        setXNext(!isXNext);\n        setsquares(nextSquares);\n      },\n      value: squares[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n  function winner(squares) {\n    const winninglines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let j = 0; j < winninglines.length; j++) {\n      const [a, b, c] = winninglines[j];\n\n      if (squares[a] && squares[a] == squares[b] && squares[c] == squares[a]) {\n        return square[a];\n      } else return null;\n    }\n  }\n\n  function isBoardFull() {\n    for (let k = 0; k < squares.length; k++) {\n      if (squares[k] == null) return false;\n    }\n\n    return true;\n  }\n\n  const Winner = winner(squares);\n\n  function getstatus() {\n    console.log(isBoardFull());\n\n    if (Winner) {\n      return \"winner is \" + Winner;\n    } else {\n      if (isBoardFull()) {\n        return \"game is Draw\";\n      } else return \"next turn is\" + (isXNext ? \"X\" : \"O\");\n    }\n  }\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), __jsx(\"div\", {\n    className: classes.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, renderSquare(6), renderSquare(7), renderSquare(8)), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), __jsx(Alert, {\n    variant: \"filled\",\n    severity: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, getstatus()));\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/Devansh Kumar Sharma/Desktop/megatropuz/cal/pages/index.tsx"],"names":["React","useState","makeStyles","createStyles","Square","square","Alert","useStyles","theme","root","width","marginTop","spacing","row","display","float","Game","classes","squares","setsquares","Array","fill","isXNext","setXNext","renderSquare","i","nextSquares","slice","winner","winninglines","j","length","a","b","c","isBoardFull","k","Winner","getstatus","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport Square from \"./../components/square\";\r\nimport square from \"./../components/square\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      \"& > * + *\": {\r\n        marginTop: theme.spacing(2)\r\n      }\r\n    },\r\n    row: {\r\n      display: \"inline\",\r\n      float: \"left\"\r\n    }\r\n  })\r\n);\r\n\r\nfunction Game() {\r\n  const classes = useStyles();\r\n  const [squares, setsquares] = useState(Array(9).fill(null));\r\n  const [isXNext, setXNext] = useState(true);\r\n\r\n  function renderSquare(i: number) {\r\n    return (\r\n      <Square\r\n        onClick={() => {\r\n          if (squares[i] != null) {\r\n            return;\r\n          }\r\n          const nextSquares = squares.slice();\r\n          nextSquares[i] = isXNext ? \"X\" : \"O\";\r\n          setXNext(!isXNext);\r\n          setsquares(nextSquares);\r\n        }}\r\n        value={squares[i]}\r\n      ></Square>\r\n    );\r\n  }\r\n\r\n  function winner(squares) {\r\n    const winninglines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let j = 0; j < winninglines.length; j++) {\r\n      const [a, b, c] = winninglines[j];\r\n      if (squares[a] && squares[a] == squares[b] && squares[c] == squares[a]) {\r\n        return square[a];\r\n      } else return null;\r\n    }\r\n  }\r\n  function isBoardFull() {\r\n    for (let k = 0; k < squares.length; k++) {\r\n      if (squares[k] == null) return false;\r\n    }\r\n    return true;\r\n  }\r\n  const Winner = winner(squares);\r\n\r\n  function getstatus() {\r\n    console.log(isBoardFull());\r\n    if (Winner) {\r\n      return \"winner is \" + Winner;\r\n    } else {\r\n      if (isBoardFull()) {\r\n        return \"game is Draw\";\r\n      } else return \"next turn is\" + (isXNext ? \"X\" : \"O\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.row}>\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </div>\r\n      <div className={classes.row}>\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </div>\r\n      <div className={classes.row}>\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      <br></br>\r\n\r\n      <Alert variant=\"filled\" severity=\"info\">\r\n        {getstatus()}\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}